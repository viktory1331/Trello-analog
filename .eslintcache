[{"M:\\it-kamasutra1\\src\\state\\store.ts":"1","M:\\it-kamasutra1\\src\\state\\todolists-reducer.ts":"2","M:\\it-kamasutra1\\src\\Todolist.tsx":"3","M:\\it-kamasutra1\\src\\Task.tsx":"4","M:\\it-kamasutra1\\src\\api\\todolists-api.ts":"5","M:\\it-kamasutra1\\src\\App.tsx":"6","M:\\it-kamasutra1\\src\\state\\tasks-reducer.ts":"7"},{"size":967,"mtime":1622739602786,"results":"8","hashOfConfig":"9"},{"size":3695,"mtime":1622738783688,"results":"10","hashOfConfig":"9"},{"size":3735,"mtime":1622743224924,"results":"11","hashOfConfig":"9"},{"size":1729,"mtime":1596076630000,"results":"12","hashOfConfig":"9"},{"size":2520,"mtime":1622737817954,"results":"13","hashOfConfig":"9"},{"size":4213,"mtime":1622747158987,"results":"14","hashOfConfig":"9"},{"size":7027,"mtime":1622746592004,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ac37x5",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"M:\\it-kamasutra1\\src\\state\\store.ts",[],"M:\\it-kamasutra1\\src\\state\\todolists-reducer.ts",[],"M:\\it-kamasutra1\\src\\Todolist.tsx",["32","33","34","35","36","37"],"M:\\it-kamasutra1\\src\\Task.tsx",["38","39","40"],"M:\\it-kamasutra1\\src\\api\\todolists-api.ts",[],"M:\\it-kamasutra1\\src\\App.tsx",["41","42","43","44","45","46","47","48","49","50","51","52"],"import React, { useCallback, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Todolist } from './Todolist';\r\nimport { AddItemForm } from './AddItemForm';\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\nimport {\r\n  addTodolistAC,\r\n  changeTodolistFilterAC,\r\n  changeTodolistTitleAC,\r\n  fetchTodolistsThunk,\r\n  FilterValuesType,\r\n  removeTodolistAC,\r\n  setTodosAC,\r\n  TodolistDomainType,\r\n} from './state/todolists-reducer';\r\nimport {\r\n  addTaskAC,\r\n    addTaskTC,\r\n  changeTaskStatusAC,\r\n  changeTaskTitleAC,\r\n  removeTaskAC,\r\n  removeTaskTC,\r\n} from './state/tasks-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppRootStateType } from './state/store';\r\nimport { TaskStatuses, TaskType, todolistsAPI } from './api/todolists-api';\r\n\r\nexport type TasksStateType = {\r\n  [key: string]: Array<TaskType>;\r\n};\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    dispatch(fetchTodolistsThunk);\r\n  }, []);\r\n\r\n  const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(\r\n    (state) => state.todolists\r\n  );\r\n  const tasks = useSelector<AppRootStateType, TasksStateType>(\r\n    (state) => state.tasks\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const removeTask = useCallback(function (id: string, todolistId: string) {\r\n    dispatch(removeTaskTC(id, todolistId));\r\n  }, []);\r\n\r\n  const addTask = useCallback(function (\r\n    todolistId: string,\r\n    taskTitile: string\r\n  ) {\r\n    dispatch(addTaskTC(taskTitile, todolistId));\r\n  },\r\n  []);\r\n\r\n  const changeStatus = useCallback(function (\r\n    id: string,\r\n    status: TaskStatuses,\r\n    todolistId: string\r\n  ) {\r\n    const action = changeTaskStatusAC(id, status, todolistId);\r\n    dispatch(action);\r\n  },\r\n  []);\r\n\r\n  const changeTaskTitle = useCallback(function (\r\n    id: string,\r\n    newTitle: string,\r\n    todolistId: string\r\n  ) {\r\n    const action = changeTaskTitleAC(id, newTitle, todolistId);\r\n    dispatch(action);\r\n  },\r\n  []);\r\n\r\n  const changeFilter = useCallback(function (\r\n    value: FilterValuesType,\r\n    todolistId: string\r\n  ) {\r\n    const action = changeTodolistFilterAC(todolistId, value);\r\n    dispatch(action);\r\n  },\r\n  []);\r\n\r\n  const removeTodolist = useCallback(function (id: string) {\r\n    const action = removeTodolistAC(id);\r\n    dispatch(action);\r\n  }, []);\r\n\r\n  const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n    const action = changeTodolistTitleAC(id, title);\r\n    dispatch(action);\r\n  }, []);\r\n\r\n  const addTodolist = useCallback(\r\n    (title: string) => {\r\n      const action = addTodolistAC(title);\r\n      dispatch(action);\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">News</Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container fixed>\r\n        <Grid container style={{ padding: '20px' }}>\r\n          <AddItemForm addItem={addTodolist} />\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          {todolists.map((tl) => {\r\n            let allTodolistTasks = tasks[tl.id];\r\n\r\n            return (\r\n              <Grid item key={tl.id}>\r\n                <Paper style={{ padding: '10px' }}>\r\n                  <Todolist\r\n                    id={tl.id}\r\n                    title={tl.title}\r\n                    tasks={allTodolistTasks}\r\n                    removeTask={removeTask}\r\n                    changeFilter={changeFilter}\r\n                    addTask={addTask}\r\n                    changeTaskStatus={changeStatus}\r\n                    filter={tl.filter}\r\n                    removeTodolist={removeTodolist}\r\n                    changeTaskTitle={changeTaskTitle}\r\n                    changeTodolistTitle={changeTodolistTitle}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","M:\\it-kamasutra1\\src\\state\\tasks-reducer.ts",["53","54"],"import { TasksStateType } from '../App';\r\nimport { v1 } from 'uuid';\r\nimport { AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType } from './todolists-reducer';\r\nimport { TaskPriorities, TaskStatuses, TaskType, todolistsAPI } from '../api/todolists-api'\r\nimport { Dispatch } from 'redux';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    task: TaskType\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    status: TaskStatuses\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\nexport type SetTasksActionType = {\r\n    type: 'SET-TASKS'\r\n    tasks: Array<TaskType>\r\n    todolistId: string\r\n}\r\n\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | SetTasksActionType\r\n\r\nconst initialState: TasksStateType = {\r\n    /*\"todolistId1\": [\r\n        { id: \"1\", title: \"CSS\", status: TaskStatuses.New, todoListId: \"todolistId1\", description: '',\r\n            startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n        { id: \"2\", title: \"JS\", status: TaskStatuses.Completed, todoListId: \"todolistId1\", description: '',\r\n            startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n        { id: \"3\", title: \"React\", status: TaskStatuses.New, todoListId: \"todolistId1\", description: '',\r\n            startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low }\r\n    ],\r\n    \"todolistId2\": [\r\n        { id: \"1\", title: \"bread\", status: TaskStatuses.New, todoListId: \"todolistId2\", description: '',\r\n            startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n        { id: \"2\", title: \"milk\", status: TaskStatuses.Completed, todoListId: \"todolistId2\", description: '',\r\n            startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low },\r\n        { id: \"3\", title: \"tea\", status: TaskStatuses.New, todoListId: \"todolistId2\", description: '',\r\n            startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low }\r\n    ]*/\r\n\r\n}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = { ...state }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id !== action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            // const stateCopy = { ...state }\r\n            // const newTask: TaskType = {\r\n            //     id: v1(),\r\n            //     title: action.title,\r\n            //     status: TaskStatuses.New,\r\n            //     todoListId: action.todolistId, description: '',\r\n            //     startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low\r\n            // }\r\n            // const tasks = stateCopy[action.todolistId];\r\n            // const newTasks = [newTask, ...tasks];\r\n            // stateCopy[action.todolistId] = newTasks;\r\n            // return stateCopy;\r\n            const stateCopy = { ...state }\r\n            const tasks = stateCopy[action.task.todoListId];\r\n            const newTasks = [action.task, ...tasks];\r\n            stateCopy[action.task.todoListId] = newTasks;\r\n            return stateCopy;\r\n\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? { ...t, status: action.status } : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({ ...state });\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            // найдём нужную таску:\r\n            let newTasksArray = todolistTasks\r\n                .map(t => t.id === action.taskId ? { ...t, title: action.title } : t);\r\n\r\n            state[action.todolistId] = newTasksArray;\r\n            return ({ ...state });\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = { ...state };\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        case 'SET-TODOLISTS': {\r\n            const stateCopy = { ...state }\r\n            action.todos.forEach((tl) => {\r\n                stateCopy[tl.id] = []\r\n            })\r\n            return stateCopy;\r\n        }\r\n        case 'SET-TASKS': {\r\n            const stateCopy = { ...state }\r\n            stateCopy[action.todolistId] = action.tasks\r\n            return stateCopy\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return { type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId }\r\n}\r\nexport const addTaskAC = (task: TaskType): AddTaskActionType => {\r\n    return { type: 'ADD-TASK', task }\r\n}\r\n\r\nexport const changeTaskStatusAC = (taskId: string, status: TaskStatuses, todolistId: string): ChangeTaskStatusActionType => {\r\n    return { type: 'CHANGE-TASK-STATUS', status, todolistId, taskId }\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return { type: 'CHANGE-TASK-TITLE', title, todolistId, taskId }\r\n}\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string): SetTasksActionType => {\r\n    return { type: 'SET-TASKS', tasks, todolistId } as const\r\n}\r\n\r\nexport const fetchTasksTC = (todolistId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.getTasks(todolistId)\r\n            .then((res) => {\r\n                const tasks = res.data.items\r\n                const action = setTasksAC(tasks, todolistId)\r\n                dispatch(action)\r\n            })\r\n    }\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch) => {\r\n    todolistsAPI.deleteTask(todolistId, taskId).then(() => {\r\n        const action = removeTaskAC(taskId, todolistId);\r\n        dispatch(action);\r\n    });\r\n};\r\nexport const addTaskTC = (todoId: string, title: string) => (dispatch: Dispatch) => {\r\n    todolistsAPI.createTask(todoId, title).then((res) => {\r\n        let task = res.data.data.item;\r\n        const action = addTaskAC(task);\r\n        dispatch(action);\r\n    });\r\n};\r\n\r\n\r\n",{"ruleId":"55","severity":1,"message":"56","line":39,"column":6,"nodeType":"57","endLine":39,"endColumn":8,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":45,"column":5,"nodeType":"57","endLine":45,"endColumn":30,"suggestions":"60"},{"ruleId":"55","severity":1,"message":"59","line":55,"column":5,"nodeType":"57","endLine":55,"endColumn":42,"suggestions":"61"},{"ruleId":"55","severity":1,"message":"59","line":60,"column":5,"nodeType":"57","endLine":60,"endColumn":35,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"59","line":64,"column":5,"nodeType":"57","endLine":64,"endColumn":35,"suggestions":"63"},{"ruleId":"55","severity":1,"message":"59","line":68,"column":5,"nodeType":"57","endLine":68,"endColumn":35,"suggestions":"64"},{"ruleId":"55","severity":1,"message":"59","line":15,"column":97,"nodeType":"57","endLine":15,"endColumn":130,"suggestions":"65"},{"ruleId":"55","severity":1,"message":"59","line":20,"column":8,"nodeType":"57","endLine":20,"endColumn":41,"suggestions":"66"},{"ruleId":"55","severity":1,"message":"59","line":24,"column":8,"nodeType":"57","endLine":24,"endColumn":41,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":23,"column":3,"nodeType":"70","messageId":"71","endLine":23,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":27,"column":3,"nodeType":"70","messageId":"71","endLine":27,"endColumn":12},{"ruleId":"68","severity":1,"message":"73","line":31,"column":3,"nodeType":"70","messageId":"71","endLine":31,"endColumn":15},{"ruleId":"68","severity":1,"message":"74","line":36,"column":34,"nodeType":"70","messageId":"71","endLine":36,"endColumn":46},{"ruleId":"55","severity":1,"message":"75","line":45,"column":6,"nodeType":"57","endLine":45,"endColumn":8,"suggestions":"76"},{"ruleId":"55","severity":1,"message":"77","line":57,"column":6,"nodeType":"57","endLine":57,"endColumn":8,"suggestions":"78"},{"ruleId":"55","severity":1,"message":"77","line":65,"column":3,"nodeType":"57","endLine":65,"endColumn":5,"suggestions":"79"},{"ruleId":"55","severity":1,"message":"77","line":75,"column":3,"nodeType":"57","endLine":75,"endColumn":5,"suggestions":"80"},{"ruleId":"55","severity":1,"message":"77","line":85,"column":3,"nodeType":"57","endLine":85,"endColumn":5,"suggestions":"81"},{"ruleId":"55","severity":1,"message":"77","line":94,"column":3,"nodeType":"57","endLine":94,"endColumn":5,"suggestions":"82"},{"ruleId":"55","severity":1,"message":"77","line":99,"column":6,"nodeType":"57","endLine":99,"endColumn":8,"suggestions":"83"},{"ruleId":"55","severity":1,"message":"77","line":104,"column":6,"nodeType":"57","endLine":104,"endColumn":8,"suggestions":"84"},{"ruleId":"68","severity":1,"message":"85","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"68","severity":1,"message":"86","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["87"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["88"],["89"],["90"],["91"],["92"],["93"],["94"],["95"],"@typescript-eslint/no-unused-vars","'setTodosAC' is defined but never used.","Identifier","unusedVar","'addTaskAC' is defined but never used.","'removeTaskAC' is defined but never used.","'todolistsAPI' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["96"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["97"],["98"],["99"],["100"],["101"],["102"],["103"],"'v1' is defined but never used.","'TaskPriorities' is defined but never used.",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},{"desc":"106","fix":"109"},{"desc":"106","fix":"110"},{"desc":"106","fix":"111"},{"desc":"106","fix":"112"},{"desc":"106","fix":"113"},{"desc":"106","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"115","fix":"118"},{"desc":"115","fix":"119"},{"desc":"115","fix":"120"},{"desc":"115","fix":"121"},{"desc":"115","fix":"122"},{"desc":"115","fix":"123"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"124","text":"125"},"Update the dependencies array to be: [props]",{"range":"126","text":"127"},{"range":"128","text":"127"},{"range":"129","text":"127"},{"range":"130","text":"127"},{"range":"131","text":"127"},{"range":"132","text":"127"},{"range":"133","text":"127"},{"range":"134","text":"127"},"Update the dependencies array to be: [dispatch]",{"range":"135","text":"136"},{"range":"137","text":"136"},{"range":"138","text":"136"},{"range":"139","text":"136"},{"range":"140","text":"136"},{"range":"141","text":"136"},{"range":"142","text":"136"},{"range":"143","text":"136"},[1299,1301],"[dispatch, props.id]",[1416,1441],"[props]",[1661,1698],[1802,1832],[1940,1970],[2084,2114],[721,754],[1027,1060],[1217,1250],[1057,1059],"[dispatch]",[1445,1447],[1609,1611],[1834,1836],[2059,2061],[2269,2271],[2409,2411],[2581,2583]]